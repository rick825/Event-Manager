{"ast":null,"code":"import React from'react';import EventList from'./EventList';import MyEvents from'./MyEvents';import{useDashNav}from'../context/DashNavContext';import{jsx as _jsx}from\"react/jsx-runtime\";const Dashbotmain=_ref=>{let{filteredEvents}=_ref;const{DashNavItem}=useDashNav();console.log('DashNavItem-->',DashNavItem);return/*#__PURE__*/_jsx(\"div\",{className:\"Dashbotcont\",children:DashNavItem==='exploreEvents'?/*#__PURE__*/_jsx(EventList,{events:filteredEvents}):DashNavItem==='MyEvents'?/*#__PURE__*/_jsx(MyEvents,{}):null});};export default Dashbotmain;","map":{"version":3,"names":["React","EventList","MyEvents","useDashNav","jsx","_jsx","Dashbotmain","_ref","filteredEvents","DashNavItem","console","log","className","children","events"],"sources":["F:/Work/Prepinsta/Project/event-manager/src/component/presentational/Dashboard/DashBot/Dashbotmain.js"],"sourcesContent":["import React from 'react';\r\nimport EventList from './EventList';\r\nimport MyEvents  from './MyEvents';\r\nimport { useDashNav } from '../context/DashNavContext';\r\n\r\nconst Dashbotmain = ({filteredEvents}) => {\r\n\r\n   const { DashNavItem } = useDashNav();\r\n\r\n    console.log('DashNavItem-->',DashNavItem);\r\n\r\n  return (\r\n\r\n    <div className='Dashbotcont'>\r\n        {DashNavItem === 'exploreEvents' ? (\r\n                <EventList events={filteredEvents} />\r\n            ) : DashNavItem === 'MyEvents' ? (\r\n                <MyEvents />\r\n            ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashbotmain"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,QAAQ,KAAO,YAAY,CAClC,OAASC,UAAU,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvD,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAsB,IAArB,CAACC,cAAc,CAAC,CAAAD,IAAA,CAElC,KAAM,CAAEE,WAAY,CAAC,CAAGN,UAAU,CAAC,CAAC,CAEnCO,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAACF,WAAW,CAAC,CAE3C,mBAEEJ,IAAA,QAAKO,SAAS,CAAC,aAAa,CAAAC,QAAA,CACvBJ,WAAW,GAAK,eAAe,cACxBJ,IAAA,CAACJ,SAAS,EAACa,MAAM,CAAEN,cAAe,CAAE,CAAC,CACrCC,WAAW,GAAK,UAAU,cAC1BJ,IAAA,CAACH,QAAQ,GAAE,CAAC,CACZ,IAAI,CACX,CAAC,CAEV,CAAC,CAED,cAAe,CAAAI,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
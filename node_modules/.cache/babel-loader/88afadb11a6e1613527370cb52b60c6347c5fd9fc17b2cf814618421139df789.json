{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Prepinsta\\\\Project\\\\event-manager\\\\src\\\\component\\\\presentational\\\\Dashboard\\\\DashBot\\\\Dashfilter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import SearchBar from './SearchBar';\nimport Dashbotmain from './Dashbotmain';\nimport FilterOptions from './FilterOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashfilter = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  // const [searchTerm, setSearchTerm] = useState('');\n  const [filterCategory, setFilterCategory] = useState('');\n  useEffect(() => {\n    fetch('https://example.com/api/events').then(response => response.json()).then(data => setEvents(data)).catch(error => console.error('Error fetching events:', error));\n  }, []);\n\n  // const handleSearch = (term) => {\n  //   setSearchTerm(term);\n  // };\n\n  const handleFilter = category => {\n    setFilterCategory(category);\n  };\n  const filteredEvents = events.filter(event => {\n    return event.name.toLowerCase().includes(filterCategory === '' || event.category === filterCategory);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashfil\",\n      children: /*#__PURE__*/_jsxDEV(FilterOptions, {\n        onFilter: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashbotmain\",\n      children: /*#__PURE__*/_jsxDEV(Dashbotmain, {\n        filteredEvents: filteredEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashfilter, \"rxKLZ9nNb/cUuFkzJGMm51Y77nI=\");\n_c = Dashfilter;\nexport default Dashfilter;\nvar _c;\n$RefreshReg$(_c, \"Dashfilter\");","map":{"version":3,"names":["React","useState","useEffect","Dashbotmain","FilterOptions","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashfilter","_s","events","setEvents","filterCategory","setFilterCategory","fetch","then","response","json","data","catch","error","console","handleFilter","category","filteredEvents","filter","event","name","toLowerCase","includes","children","className","onFilter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Work/Prepinsta/Project/event-manager/src/component/presentational/Dashboard/DashBot/Dashfilter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import SearchBar from './SearchBar';\r\nimport Dashbotmain from './Dashbotmain';\r\nimport FilterOptions from './FilterOptions';\r\n\r\nconst Dashfilter = () => {\r\n\r\n  const [events, setEvents] = useState([]);\r\n  // const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterCategory, setFilterCategory] = useState('');\r\n\r\n  useEffect(() => {\r\n    \r\n    fetch('https://example.com/api/events')\r\n      .then(response => response.json())\r\n      .then(data => setEvents(data))\r\n      .catch(error => console.error('Error fetching events:', error));\r\n  }, []);\r\n\r\n  // const handleSearch = (term) => {\r\n  //   setSearchTerm(term);\r\n  // };\r\n\r\n  const handleFilter = (category) => {\r\n    setFilterCategory(category);\r\n  };\r\n\r\n  const filteredEvents = events.filter(event => {\r\n    return (\r\n      event.name.toLowerCase().includes(\r\n      filterCategory === '' || event.category === filterCategory)\r\n    );\r\n  });\r\n\r\n  return <>\r\n    <div className='dashfil'>\r\n      <FilterOptions onFilter={handleFilter} />\r\n   </div>\r\n   <div className=\"dashbotmain\">\r\n      <Dashbotmain  filteredEvents={filteredEvents}/>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default Dashfilter"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IAEda,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,SAAS,CAACO,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;;EAEA,MAAME,YAAY,GAAIC,QAAQ,IAAK;IACjCV,iBAAiB,CAACU,QAAQ,CAAC;EAC7B,CAAC;EAED,MAAMC,cAAc,GAAGd,MAAM,CAACe,MAAM,CAACC,KAAK,IAAI;IAC5C,OACEA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CACjCjB,cAAc,KAAK,EAAE,IAAIc,KAAK,CAACH,QAAQ,KAAKX,cAAc,CAAC;EAE/D,CAAC,CAAC;EAEF,oBAAOP,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACLzB,OAAA;MAAK0B,SAAS,EAAC,SAAS;MAAAD,QAAA,eACtBzB,OAAA,CAACF,aAAa;QAAC6B,QAAQ,EAAEV;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACN/B,OAAA;MAAK0B,SAAS,EAAC,aAAa;MAAAD,QAAA,eACzBzB,OAAA,CAACH,WAAW;QAAEsB,cAAc,EAAEA;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA,eACN,CAAC;AACL,CAAC;AAAA3B,EAAA,CArCKD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAuChB,eAAeA,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
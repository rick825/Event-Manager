{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Prepinsta\\\\Project\\\\event-manager\\\\src\\\\component\\\\presentational\\\\Dashboard\\\\DashFilter\\\\Dashfilter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EventList from '../Dashbotmain/EventList';\n// import SearchBar from './SearchBar';\nimport FilterOptions from './FilterOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashfilter = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterCategory, setFilterCategory] = useState('');\n  useEffect(() => {\n    fetch('https://example.com/api/events').then(response => response.json()).then(data => setEvents(data)).catch(error => console.error('Error fetching events:', error));\n  }, []);\n  const handleSearch = term => {\n    setSearchTerm(term);\n  };\n  const handleFilter = category => {\n    setFilterCategory(category);\n  };\n  const filteredEvents = events.filter(event => {\n    return event.name.toLowerCase().includes(searchTerm.toLowerCase()) && (filterCategory === '' || event.category === filterCategory);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashfil\",\n    children: [/*#__PURE__*/_jsxDEV(FilterOptions, {\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      events: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashfilter, \"Vk3nlL7J0Q8D57JmUCUo5v31Fxk=\");\n_c = Dashfilter;\nexport default Dashfilter;\nvar _c;\n$RefreshReg$(_c, \"Dashfilter\");","map":{"version":3,"names":["React","useState","useEffect","EventList","FilterOptions","jsxDEV","_jsxDEV","Dashfilter","_s","events","setEvents","searchTerm","setSearchTerm","filterCategory","setFilterCategory","fetch","then","response","json","data","catch","error","console","handleSearch","term","handleFilter","category","filteredEvents","filter","event","name","toLowerCase","includes","className","children","onFilter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Work/Prepinsta/Project/event-manager/src/component/presentational/Dashboard/DashFilter/Dashfilter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport EventList from '../Dashbotmain/EventList';\r\n// import SearchBar from './SearchBar';\r\nimport FilterOptions from './FilterOptions';\r\nconst Dashfilter = () => {\r\n\r\n  const [events, setEvents] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterCategory, setFilterCategory] = useState('');\r\n\r\n  useEffect(() => {\r\n    \r\n    fetch('https://example.com/api/events')\r\n      .then(response => response.json())\r\n      .then(data => setEvents(data))\r\n      .catch(error => console.error('Error fetching events:', error));\r\n  }, []);\r\n\r\n  const handleSearch = (term) => {\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  const handleFilter = (category) => {\r\n    setFilterCategory(category);\r\n  };\r\n\r\n  const filteredEvents = events.filter(event => {\r\n    \r\n    return (\r\n      event.name.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n      (filterCategory === '' || event.category === filterCategory)\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className='dashfil'>\r\n       {/* <SearchBar onSearch={handleSearch} /> */}\r\n      <FilterOptions onFilter={handleFilter} />\r\n      <EventList events={filteredEvents} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashfilter"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,0BAA0B;AAChD;AACA,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IAEda,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIT,SAAS,CAACS,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,YAAY,GAAIC,IAAI,IAAK;IAC7BZ,aAAa,CAACY,IAAI,CAAC;EACrB,CAAC;EAED,MAAMC,YAAY,GAAIC,QAAQ,IAAK;IACjCZ,iBAAiB,CAACY,QAAQ,CAAC;EAC7B,CAAC;EAED,MAAMC,cAAc,GAAGlB,MAAM,CAACmB,MAAM,CAACC,KAAK,IAAI;IAE5C,OACEA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrB,UAAU,CAACoB,WAAW,CAAC,CAAC,CAAC,KAC1DlB,cAAc,KAAK,EAAE,IAAIgB,KAAK,CAACH,QAAQ,KAAKb,cAAc,CAAC;EAEhE,CAAC,CAAC;EAEF,oBACEP,OAAA;IAAK2B,SAAS,EAAC,SAAS;IAAAC,QAAA,gBAEtB5B,OAAA,CAACF,aAAa;MAAC+B,QAAQ,EAAEV;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCjC,OAAA,CAACH,SAAS;MAACM,MAAM,EAAEkB;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAAA/B,EAAA,CArCKD,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAuChB,eAAeA,UAAU;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}